; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\systick.o --asm_dir=.\Objects\ --list_dir=.\Objects\ --depend=.\objects\systick.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Libraries -I.\use -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -I"E:\desktop file\32\test1\RTE" -ID:\Software\Keil\32\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Software\Keil\32\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\objects\systick.crf use\SysTick.c]
                          THUMB

                          AREA ||i.SysTick_Init||, CODE, READONLY, ALIGN=2

                  SysTick_Init PROC
;;;9      //SYSCLK:系统时钟频率
;;;10     void SysTick_Init(u8 SYSCLK)
000000  b510              PUSH     {r4,lr}
;;;11     {
000002  4604              MOV      r4,r0
;;;12     	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8); 
000004  f06f0004          MVN      r0,#4
000008  f7fffffe          BL       SysTick_CLKSourceConfig
;;;13     	fac_us=SYSCLK/8;					
00000c  17e1              ASRS     r1,r4,#31
00000e  eb047151          ADD      r1,r4,r1,LSR #29
000012  f3c101c7          UBFX     r1,r1,#3,#8
000016  4a07              LDR      r2,|L1.52|
000018  7011              STRB     r1,[r2,#0]
;;;14     	fac_ms=(u16)fac_us*1000;				   
00001a  4610              MOV      r0,r2
00001c  7800              LDRB     r0,[r0,#0]  ; fac_us
00001e  eb000140          ADD      r1,r0,r0,LSL #1
000022  ebc110c0          RSB      r0,r1,r0,LSL #7
000026  f64f71ff          MOV      r1,#0xffff
00002a  ea0100c0          AND      r0,r1,r0,LSL #3
00002e  4902              LDR      r1,|L1.56|
000030  8008              STRH     r0,[r1,#0]
;;;15     }								    
000032  bd10              POP      {r4,pc}
;;;16     
                          ENDP

                  |L1.52|
                          DCD      fac_us
                  |L1.56|
                          DCD      fac_ms

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;47     *******************************************************************************/
;;;48     void delay_ms(u16 nms)
000000  4601              MOV      r1,r0
;;;49     {	 		  	  
;;;50     	u32 temp;		   
;;;51     	SysTick->LOAD=(u32)nms*fac_ms;				//时间加载(SysTick->LOAD为24bit)
000002  4a11              LDR      r2,|L2.72|
000004  8812              LDRH     r2,[r2,#0]  ; fac_ms
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;52     	SysTick->VAL =0x00;							//清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;53     	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;	//开始倒数  
000012  461a              MOV      r2,r3
000014  6912              LDR      r2,[r2,#0x10]
000016  f0420201          ORR      r2,r2,#1
00001a  611a              STR      r2,[r3,#0x10]
;;;54     	do
00001c  bf00              NOP      
                  |L2.30|
;;;55     	{
;;;56     		temp=SysTick->CTRL;
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6910              LDR      r0,[r2,#0x10]
;;;57     	}while((temp&0x01)&&!(temp&(1<<16)));		//等待时间到达   
000024  f0000201          AND      r2,r0,#1
000028  b11a              CBZ      r2,|L2.50|
00002a  f4003280          AND      r2,r0,#0x10000
00002e  2a00              CMP      r2,#0
000030  d0f5              BEQ      |L2.30|
                  |L2.50|
;;;58     	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;	//关闭计数器
000032  f04f22e0          MOV      r2,#0xe000e000
000036  6912              LDR      r2,[r2,#0x10]
000038  f0220201          BIC      r2,r2,#1
00003c  f04f23e0          MOV      r3,#0xe000e000
000040  611a              STR      r2,[r3,#0x10]
;;;59     	SysTick->VAL =0X00;       					//清空计数器	  	    
000042  2200              MOVS     r2,#0
000044  619a              STR      r2,[r3,#0x18]
;;;60     } 
000046  4770              BX       lr
;;;61     
                          ENDP

                  |L2.72|
                          DCD      fac_ms

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;24     *******************************************************************************/		    								   
;;;25     void delay_us(u32 nus)
000000  4601              MOV      r1,r0
;;;26     {		
;;;27     	u32 temp;	    	 
;;;28     	SysTick->LOAD=nus*fac_us; 					//时间加载	  		 
000002  4a11              LDR      r2,|L3.72|
000004  7812              LDRB     r2,[r2,#0]  ; fac_us
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;29     	SysTick->VAL=0x00;        					//清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;30     	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;	//开始倒数	  
000012  461a              MOV      r2,r3
000014  6912              LDR      r2,[r2,#0x10]
000016  f0420201          ORR      r2,r2,#1
00001a  611a              STR      r2,[r3,#0x10]
;;;31     	do
00001c  bf00              NOP      
                  |L3.30|
;;;32     	{
;;;33     		temp=SysTick->CTRL;
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6910              LDR      r0,[r2,#0x10]
;;;34     	}while((temp&0x01)&&!(temp&(1<<16)));		//等待时间到达   
000024  f0000201          AND      r2,r0,#1
000028  b11a              CBZ      r2,|L3.50|
00002a  f4003280          AND      r2,r0,#0x10000
00002e  2a00              CMP      r2,#0
000030  d0f5              BEQ      |L3.30|
                  |L3.50|
;;;35     	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;	//关闭计数器
000032  f04f22e0          MOV      r2,#0xe000e000
000036  6912              LDR      r2,[r2,#0x10]
000038  f0220201          BIC      r2,r2,#1
00003c  f04f23e0          MOV      r3,#0xe000e000
000040  611a              STR      r2,[r3,#0x10]
;;;36     	SysTick->VAL =0X00;      					 //清空计数器	 
000042  2200              MOVS     r2,#0
000044  619a              STR      r2,[r3,#0x18]
;;;37     }
000046  4770              BX       lr
;;;38     
                          ENDP

                  |L3.72|
                          DCD      fac_us

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000
