<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [ex1\ex1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ex1\ex1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Sun Mar 27 22:26:22 2022
<BR><P>
<H3>Maximum Stack Usage =        208 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; LoRa_Init &rArr; radio_zm4xx_inst_init &rArr; radio_sx127x_lora_init &rArr; __rx_chain_calibration &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_COMP_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[25]">delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">delay_us</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_COMP_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[10]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from stm32l0xx_it.o(i.EXTI4_15_IRQHandler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32l0xx_it.o(i.HardFault_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1b]">I2C1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1c]">I2C2_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[19]">I2C3_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[12]">LPTIM1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[21]">LPUART1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32l0xx_it.o(i.NMI_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32l0xx_it.o(i.PendSV_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1d]">SPI1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1e]">SPI2_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32l0xx_it.o(i.SVC_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32l0xx_it.o(i.SysTick_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_stm32l0xx.o(i.SystemInit) referenced from startup_stm32l071xx.o(.text)
 <LI><a href="#[18]">TIM21_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1a]">TIM22_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[14]">TIM2_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[15]">TIM3_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[16]">TIM6_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[17]">TIM7_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1f]">USART1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[20]">USART2_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[13]">USART4_5_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[3f]">__cad_done_call_func</a> from sx127x_lora.o(i.__cad_done_call_func) referenced from sx127x_lora.o(.data)
 <LI><a href="#[3e]">__fhss_change_channel_call_func</a> from sx127x_lora.o(i.__fhss_change_channel_call_func) referenced from sx127x_lora.o(.data)
 <LI><a href="#[24]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l071xx.o(.text)
 <LI><a href="#[3d]">__rx_crc_err_call_func</a> from sx127x_lora.o(i.__rx_crc_err_call_func) referenced from sx127x_lora.o(.data)
 <LI><a href="#[3b]">__rx_done_call_func</a> from sx127x_lora.o(i.__rx_done_call_func) referenced from sx127x_lora.o(.data)
 <LI><a href="#[3c]">__rx_timeout_call_func</a> from sx127x_lora.o(i.__rx_timeout_call_func) referenced from sx127x_lora.o(.data)
 <LI><a href="#[37]">__sx127x_ioctl</a> from sx127x_lora.o(i.__sx127x_ioctl) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[38]">__sx127x_lora_dio0_irq_func</a> from sx127x_lora.o(i.__sx127x_lora_dio0_irq_func) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[39]">__sx127x_lora_dio1_irq_func</a> from sx127x_lora.o(i.__sx127x_lora_dio1_irq_func) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[3a]">__sx127x_lora_dio2_irq_func</a> from sx127x_lora.o(i.__sx127x_lora_dio2_irq_func) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[2f]">__sx127x_lora_get_preamble_length</a> from sx127x_lora.o(i.__sx127x_lora_get_preamble_length) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[34]">__sx127x_lora_read_cur_rssi</a> from sx127x_lora.o(i.__sx127x_lora_read_cur_rssi) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[2e]">__sx127x_lora_set_preamble_length</a> from sx127x_lora.o(i.__sx127x_lora_set_preamble_length) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[31]">__sx127x_lora_set_rf_frequency</a> from sx127x_lora.o(i.__sx127x_lora_set_rf_frequency) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[35]">__sx127x_lora_tx_data</a> from sx127x_lora.o(i.__sx127x_lora_tx_data) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[32]">__sx127x_mode_set</a> from sx127x_lora.o(i.__sx127x_mode_set) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[36]">__sx127x_pkt_buf_read</a> from sx127x_lora.o(i.__sx127x_pkt_buf_read) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[30]">__sx127x_power_set_adapter</a> from sx127x_lora.o(i.__sx127x_power_set_adapter) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[2b]">__sx127x_reset</a> from sx127x_lora.o(i.__sx127x_reset) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[33]">__sx127x_state_get</a> from sx127x_lora.o(i.__sx127x_state_get) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[2d]">__sx127x_sync_id_get</a> from sx127x_lora.o(i.__sx127x_sync_id_get) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[2c]">__sx127x_sync_id_set</a> from sx127x_lora.o(i.__sx127x_sync_id_set) referenced from sx127x_lora.o(.constdata)
 <LI><a href="#[26]">delay_ms</a> from timer.o(i.delay_ms) referenced from main.o(i.LoRa_Init)
 <LI><a href="#[25]">delay_us</a> from timer.o(i.delay_us) referenced from main.o(i.LoRa_Init)
 <LI><a href="#[22]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[2a]">spi_recv_byte</a> from spi.o(i.spi_recv_byte) referenced from main.o(i.LoRa_Init)
 <LI><a href="#[29]">spi_send_byte</a> from spi.o(i.spi_send_byte) referenced from main.o(i.LoRa_Init)
 <LI><a href="#[28]">zm4xx_rst_pin_set</a> from zm4xx_gpio.o(i.zm4xx_rst_pin_set) referenced from main.o(i.LoRa_Init)
 <LI><a href="#[27]">zm4xx_sel_pin_set</a> from zm4xx_gpio.o(i.zm4xx_sel_pin_set) referenced from main.o(i.LoRa_Init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[24]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(.text)
</UL>
<P><STRONG><a name="[a3]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[40]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[56]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a4]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a5]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a6]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a7]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[a8]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>USART4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_tx_data
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_cad_start
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_dio2_irq_func
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_time_on_air_get
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_time_on_air_get
</UL>

<P><STRONG><a name="[aa]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_power_set_adapter
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input_Mode
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rx_chain_calibration
</UL>

<P><STRONG><a name="[50]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_frequency
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rx_chain_calibration
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_power_set_adapter
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_frequency
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rx_chain_calibration
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_power_set_adapter
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_frequency
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rx_chain_calibration
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[b0]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[b1]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b2]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[4c]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[4b]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[41]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI4_15_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; radio_buf_send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>HAL_Delay</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_BrdInit
</UL>

<P><STRONG><a name="[5a]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; radio_buf_send
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_buf_send
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; radio_buf_send
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>HAL_GPIO_Init</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zm4xx_pin_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input_Mode
</UL>

<P><STRONG><a name="[80]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv_byte
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input
</UL>

<P><STRONG><a name="[5b]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[73]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zm4xx_pin_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_BrdInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoRa_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_PowerControl
</UL>

<P><STRONG><a name="[59]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[81]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5d]"></a>HAL_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32l0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>HAL_InitTick</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[5f]"></a>HAL_MspInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l0xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[78]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[62]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[63]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 418 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[64]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[65]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1254 bytes, Stack size 32 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[61]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, stm32l0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>I2CSendByte</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, i2c.o(i.I2CSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2CSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Write
</UL>

<P><STRONG><a name="[6a]"></a>I2CStart</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c.o(i.I2CStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2CStart
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Write
</UL>

<P><STRONG><a name="[6b]"></a>I2CStop</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c.o(i.I2CStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2CStop
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Write
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
</UL>

<P><STRONG><a name="[6c]"></a>I2CWaitAck</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, i2c.o(i.I2CWaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2CWaitAck &rArr; SDA_Output_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input_Mode
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Write
</UL>

<P><STRONG><a name="[70]"></a>LoRa_Init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, main.o(i.LoRa_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LoRa_Init &rArr; radio_zm4xx_inst_init &rArr; radio_sx127x_lora_init &rArr; __rx_chain_calibration &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_zm4xx_inst_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_mode_set
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_freq_set
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>MX_GPIO_Init</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>OLED_Clear</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, oled.o(i.OLED_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OLED_Clear &rArr; OLED_Write &rArr; I2CWaitAck &rArr; SDA_Output_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_BrdInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[7b]"></a>OLED_Init</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, oled.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OLED_Init &rArr; OLED_Clear &rArr; OLED_Write &rArr; I2CWaitAck &rArr; SDA_Output_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Write
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_BrdInit
</UL>

<P><STRONG><a name="[7c]"></a>OLED_PowerControl</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, oled.o(i.OLED_PowerControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OLED_PowerControl
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_BrdInit
</UL>

<P><STRONG><a name="[7d]"></a>OLED_SetPos</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, oled.o(i.OLED_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = OLED_SetPos &rArr; OLED_Write &rArr; I2CWaitAck &rArr; SDA_Output_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>

<P><STRONG><a name="[7e]"></a>OLED_ShowChar</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, oled.o(i.OLED_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OLED_ShowChar &rArr; OLED_SetPos &rArr; OLED_Write &rArr; I2CWaitAck &rArr; SDA_Output_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Write
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetPos
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
</UL>

<P><STRONG><a name="[7f]"></a>OLED_ShowString</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, oled.o(i.OLED_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_SetPos &rArr; OLED_Write &rArr; I2CWaitAck &rArr; SDA_Output_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_BrdInit
</UL>

<P><STRONG><a name="[7a]"></a>OLED_Write</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, oled.o(i.OLED_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OLED_Write &rArr; I2CWaitAck &rArr; SDA_Output_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetPos
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SCL_Output</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, i2c.o(i.SCL_Output))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
</UL>

<P><STRONG><a name="[6e]"></a>SDA_Input</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, i2c.o(i.SDA_Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDA_Input
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
</UL>

<P><STRONG><a name="[6d]"></a>SDA_Input_Mode</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, i2c.o(i.SDA_Input_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDA_Input_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
</UL>

<P><STRONG><a name="[69]"></a>SDA_Output</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2c.o(i.SDA_Output))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
</UL>

<P><STRONG><a name="[6f]"></a>SDA_Output_Mode</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, i2c.o(i.SDA_Output_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDA_Output_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>SystemClock_Config</STRONG> (Thumb, 94 bytes, Stack size 80 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_stm32l0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(.text)
</UL>
<P><STRONG><a name="[83]"></a>Task_BrdInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.Task_BrdInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Task_BrdInit &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_SetPos &rArr; OLED_Write &rArr; I2CWaitAck &rArr; SDA_Output_Mode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_PowerControl
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[9e]"></a>__ARM_common_ll_mulss</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sx127x_lora.o(i.__ARM_common_ll_mulss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_time_on_air_get
</UL>

<P><STRONG><a name="[9f]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sx127x_lora.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_time_on_air_get
</UL>

<P><STRONG><a name="[8c]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sx127x_lora.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_state_get
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_ioctl
</UL>

<P><STRONG><a name="[b6]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[38]"></a>__sx127x_lora_dio0_irq_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sx127x_lora.o(i.__sx127x_lora_dio0_irq_func))
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>__sx127x_lora_dio1_irq_func</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, sx127x_lora.o(i.__sx127x_lora_dio1_irq_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __sx127x_lora_dio1_irq_func &rArr; __sx127x_lora_set_op_mode &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_op_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>__sx127x_lora_dio2_irq_func</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_dio2_irq_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __sx127x_lora_dio2_irq_func &rArr; __sx127x_lora_set_rf_frequency &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_frequency
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[2b]"></a>__sx127x_reset</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, sx127x_lora.o(i.__sx127x_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __sx127x_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_sx127x_lora_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>crc16_ccitt</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, sx127x_lora.o(i.crc16_ccitt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_tx_data
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_data_read
</UL>

<P><STRONG><a name="[26]"></a>delay_ms</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, timer.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_ms &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.LoRa_Init)
</UL>
<P><STRONG><a name="[25]"></a>delay_us</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i.delay_us))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_byte
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv_byte
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.LoRa_Init)
</UL>
<P><STRONG><a name="[22]"></a>main</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = main &rArr; LoRa_Init &rArr; radio_zm4xx_inst_init &rArr; radio_sx127x_lora_init &rArr; __rx_chain_calibration &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zm4xx_pin_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_BrdInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoRa_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5c]"></a>radio_buf_send</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sx127x_lora.o(i.radio_buf_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = radio_buf_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[72]"></a>radio_freq_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sx127x_lora.o(i.radio_freq_set))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoRa_Init
</UL>

<P><STRONG><a name="[74]"></a>radio_mode_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sx127x_lora.o(i.radio_mode_set))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoRa_Init
</UL>

<P><STRONG><a name="[a2]"></a>radio_sx127x_lora_init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, sx127x_lora.o(i.radio_sx127x_lora_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = radio_sx127x_lora_init &rArr; __rx_chain_calibration &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_op_mode
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rx_chain_calibration
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_zm4xx_inst_init
</UL>

<P><STRONG><a name="[71]"></a>radio_zm4xx_inst_init</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, sx127x_lora.o(i.radio_zm4xx_inst_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = radio_zm4xx_inst_init &rArr; radio_sx127x_lora_init &rArr; __rx_chain_calibration &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_sx127x_lora_init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoRa_Init
</UL>

<P><STRONG><a name="[a1]"></a>spi_init</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, spi.o(i.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spi_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>spi_recv_byte</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, spi.o(i.spi_recv_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_recv_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.LoRa_Init)
</UL>
<P><STRONG><a name="[29]"></a>spi_send_byte</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, spi.o(i.spi_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.LoRa_Init)
</UL>
<P><STRONG><a name="[a0]"></a>zm4xx_pin_init</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, zm4xx_gpio.o(i.zm4xx_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = zm4xx_pin_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>zm4xx_rst_pin_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zm4xx_gpio.o(i.zm4xx_rst_pin_set))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.LoRa_Init)
</UL>
<P><STRONG><a name="[27]"></a>zm4xx_sel_pin_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zm4xx_gpio.o(i.zm4xx_sel_pin_set))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.LoRa_Init)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[68]"></a>delay1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2c.o(i.delay1))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
</UL>

<P><STRONG><a name="[3f]"></a>__cad_done_call_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sx127x_lora.o(i.__cad_done_call_func))
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>__fhss_change_channel_call_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sx127x_lora.o(i.__fhss_change_channel_call_func))
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.data)
</UL>
<P><STRONG><a name="[84]"></a>__rx_chain_calibration</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, sx127x_lora.o(i.__rx_chain_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __rx_chain_calibration &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_buffer
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_sx127x_lora_init
</UL>

<P><STRONG><a name="[3d]"></a>__rx_crc_err_call_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sx127x_lora.o(i.__rx_crc_err_call_func))
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>__rx_done_call_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sx127x_lora.o(i.__rx_done_call_func))
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>__rx_timeout_call_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sx127x_lora.o(i.__rx_timeout_call_func))
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.data)
</UL>
<P><STRONG><a name="[88]"></a>__sx127x_cad_start</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, sx127x_lora.o(i.__sx127x_cad_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __sx127x_cad_start &rArr; __sx127x_lora_set_rf_frequency &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_frequency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_op_mode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_ioctl
</UL>

<P><STRONG><a name="[8a]"></a>__sx127x_detect_optimize_set</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_detect_optimize_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __sx127x_detect_optimize_set &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_spreading_factor
</UL>

<P><STRONG><a name="[8b]"></a>__sx127x_detect_threshold_set</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sx127x_lora.o(i.__sx127x_detect_threshold_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __sx127x_detect_threshold_set &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_spreading_factor
</UL>

<P><STRONG><a name="[37]"></a>__sx127x_ioctl</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, sx127x_lora.o(i.__sx127x_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __sx127x_ioctl &rArr; __sx127x_cad_start &rArr; __sx127x_lora_set_rf_frequency &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_spreading_factor
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_signal_bandwidth
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_packet_crc_on
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_error_coding
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_cad_start
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>__sx127x_lora_get_preamble_length</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_get_preamble_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __sx127x_lora_get_preamble_length &rArr; __sx127x_read_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>__sx127x_lora_init</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __sx127x_lora_init &rArr; __sx127x_lora_set_rf_frequency &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_buffer
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_spreading_factor
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_signal_bandwidth
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_power
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_frequency
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_preamble_length
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_payload_length
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_packet_crc_on
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_op_mode
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_error_coding
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_sx127x_lora_init
</UL>

<P><STRONG><a name="[34]"></a>__sx127x_lora_read_cur_rssi</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_read_cur_rssi))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __sx127x_lora_read_cur_rssi &rArr; __sx127x_read_reg &rArr; __sx127x_read_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>__sx127x_lora_rx_data_read</STRONG> (Thumb, 414 bytes, Stack size 32 bytes, sx127x_lora.o(i.__sx127x_lora_rx_data_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __sx127x_lora_rx_data_read &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_fifo
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_pkt_buf_read
</UL>

<P><STRONG><a name="[98]"></a>__sx127x_lora_rx_state_enter</STRONG> (Thumb, 710 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_rx_state_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __sx127x_lora_rx_state_enter &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_frequency
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_payload_length
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_op_mode
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_low_datarate_optimize
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_mode_set
</UL>

<P><STRONG><a name="[8f]"></a>__sx127x_lora_set_error_coding</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_error_coding))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __sx127x_lora_set_error_coding &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_ioctl
</UL>

<P><STRONG><a name="[99]"></a>__sx127x_lora_set_low_datarate_optimize</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_low_datarate_optimize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __sx127x_lora_set_low_datarate_optimize &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_tx_data
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
</UL>

<P><STRONG><a name="[89]"></a>__sx127x_lora_set_op_mode</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_op_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __sx127x_lora_set_op_mode &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_mode_set
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_tx_data
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_cad_start
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_sx127x_lora_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_dio1_irq_func
</UL>

<P><STRONG><a name="[9a]"></a>__sx127x_lora_set_pa_20dbm</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_pa_20dbm))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __sx127x_lora_set_pa_20dbm &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_power
</UL>

<P><STRONG><a name="[90]"></a>__sx127x_lora_set_packet_crc_on</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_packet_crc_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __sx127x_lora_set_packet_crc_on &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_ioctl
</UL>

<P><STRONG><a name="[93]"></a>__sx127x_lora_set_payload_length</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sx127x_lora.o(i.__sx127x_lora_set_payload_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __sx127x_lora_set_payload_length &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
</UL>

<P><STRONG><a name="[2e]"></a>__sx127x_lora_set_preamble_length</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_preamble_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __sx127x_lora_set_preamble_length &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_buffer
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>__sx127x_lora_set_rf_frequency</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_rf_frequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __sx127x_lora_set_rf_frequency &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_buffer
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_tx_data
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_cad_start
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_dio2_irq_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>__sx127x_lora_set_rf_power</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_rf_power))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __sx127x_lora_set_rf_power &rArr; __sx127x_lora_set_pa_20dbm &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_pa_20dbm
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_power_set_adapter
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
</UL>

<P><STRONG><a name="[8d]"></a>__sx127x_lora_set_signal_bandwidth</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_signal_bandwidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __sx127x_lora_set_signal_bandwidth &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_ioctl
</UL>

<P><STRONG><a name="[8e]"></a>__sx127x_lora_set_spreading_factor</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_lora_set_spreading_factor))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __sx127x_lora_set_spreading_factor &rArr; __sx127x_detect_optimize_set &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_detect_threshold_set
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_detect_optimize_set
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_ioctl
</UL>

<P><STRONG><a name="[35]"></a>__sx127x_lora_tx_data</STRONG> (Thumb, 506 bytes, Stack size 32 bytes, sx127x_lora.o(i.__sx127x_lora_tx_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __sx127x_lora_tx_data &rArr; __sx127x_time_on_air_get &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_buffer
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_time_on_air_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_frequency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_op_mode
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_low_datarate_optimize
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>__sx127x_mode_set</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __sx127x_mode_set &rArr; __sx127x_lora_rx_state_enter &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_op_mode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>__sx127x_pkt_buf_read</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, sx127x_lora.o(i.__sx127x_pkt_buf_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __sx127x_pkt_buf_read &rArr; __sx127x_lora_rx_data_read &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_data_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>__sx127x_power_set_adapter</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, sx127x_lora.o(i.__sx127x_power_set_adapter))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __sx127x_power_set_adapter &rArr; __sx127x_lora_set_rf_power &rArr; __sx127x_lora_set_pa_20dbm &rArr; __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_power
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>__sx127x_read_buffer</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, sx127x_lora.o(i.__sx127x_read_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __sx127x_read_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_fifo
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_preamble_length
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_get_preamble_length
</UL>

<P><STRONG><a name="[96]"></a>__sx127x_read_fifo</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sx127x_lora.o(i.__sx127x_read_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __sx127x_read_fifo &rArr; __sx127x_read_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_data_read
</UL>

<P><STRONG><a name="[85]"></a>__sx127x_read_reg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sx127x_lora.o(i.__sx127x_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __sx127x_read_reg &rArr; __sx127x_read_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_time_on_air_get
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_pkt_buf_read
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_mode_set
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_tx_data
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_spreading_factor
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_signal_bandwidth
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_power
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_packet_crc_on
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_pa_20dbm
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_op_mode
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_low_datarate_optimize
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_error_coding
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_data_read
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_read_cur_rssi
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_detect_optimize_set
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_cad_start
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rx_chain_calibration
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_sx127x_lora_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_dio2_irq_func
</UL>

<P><STRONG><a name="[33]"></a>__sx127x_state_get</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, sx127x_lora.o(i.__sx127x_state_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sx127x_state_get &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[2d]"></a>__sx127x_sync_id_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sx127x_lora.o(i.__sx127x_sync_id_get))
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[2c]"></a>__sx127x_sync_id_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sx127x_lora.o(i.__sx127x_sync_id_set))
<BR>[Address Reference Count : 1]<UL><LI> sx127x_lora.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>__sx127x_time_on_air_get</STRONG> (Thumb, 324 bytes, Stack size 40 bytes, sx127x_lora.o(i.__sx127x_time_on_air_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __sx127x_time_on_air_get &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_read_reg
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_tx_data
</UL>

<P><STRONG><a name="[87]"></a>__sx127x_write_buffer</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, sx127x_lora.o(i.__sx127x_write_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __sx127x_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_reg
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_tx_data
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_frequency
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_preamble_length
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rx_chain_calibration
</UL>

<P><STRONG><a name="[86]"></a>__sx127x_write_reg</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, sx127x_lora.o(i.__sx127x_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __sx127x_write_reg &rArr; __sx127x_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_pkt_buf_read
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_mode_set
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_tx_data
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_spreading_factor
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_signal_bandwidth
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_rf_power
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_payload_length
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_packet_crc_on
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_pa_20dbm
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_op_mode
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_low_datarate_optimize
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_set_error_coding
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_state_enter
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_rx_data_read
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_ioctl
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_detect_threshold_set
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_detect_optimize_set
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_cad_start
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rx_chain_calibration
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_sx127x_lora_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_dio2_irq_func
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sx127x_lora_dio1_irq_func
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
