C51 COMPILER V9.01   DRIVE                                                                 11/06/2021 20:38:09 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DRIVE
OBJECT MODULE PLACED IN drive.OBJ
COMPILER INVOKED BY: D:\Software\Keil\32\C51\BIN\C51.EXE drive.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\drive.lst) TABS(2)

line level    source

   1          #include<drive.h>
   2          #include<reg52.h>
   3          
   4          sbit ENA = P2^0;   //右点机使能
   5          sbit IN1 = P2^1;   //为0右轮反转
   6          sbit IN2 = P2^2;   //为0右轮正转
   7          sbit IN3 = P2^3;   //为0左轮正转
   8          sbit IN4 = P2^4;   //为0左轮反转
   9          sbit ENB = P2^5;   //左电机使能
  10          
  11          sbit left1 = P1^3;  //探头
  12          sbit left2 = P1^2;
  13          sbit right1 = P1^1;
  14          sbit right2 = P1^0;
  15          
  16          u8 PWMCnt1 = 0;
  17          u8 PWMCnt2 = 0;
  18          u8 cntPWM1 = 0;
  19          u8 cntPWM2 = 0;
  20          
  21          unsigned int j;
  22          
  23          //i = 1时， 大概延时10us
  24          void delay(u16 i)
  25          {
  26   1          while (i--);
  27   1      }
  28          
  29          void Timer0Init()
  30          {
  31   1        TH0 = 0xFF;
  32   1        TL0 = 0xA3;
  33   1        TMOD &= 0xF0;
  34   1        TMOD |= 0x01;
  35   1        EA = 1;
  36   1        ET0 = 1;
  37   1        TR0 = 1;
  38   1      }
  39          
  40          void Timer1Init(void)   //100微秒@11.0592MHz
  41          {
  42   1        TMOD &= 0x0F;   //设置定时器模式
  43   1        TL1 = 0xCD;   //设置定时初值
  44   1        TH1 = 0xD4;   //设置定时初值
  45   1        TF1 = 0;    //清除TF1标志
  46   1        TR1 = 1;    //定时器1开始计时
  47   1        EA = 1;
  48   1        ET0 = 1;
  49   1      }
  50          
  51          void TurnRight1()      //右转
  52          {
  53   1      //  IN1 = 0;  //右轮反转
  54   1      //  IN2 = 1;
C51 COMPILER V9.01   DRIVE                                                                 11/06/2021 20:38:09 PAGE 2   

  55   1      
  56   1        IN3 = 1;  //左轮正转
  57   1        IN4 = 0;
  58   1        cntPWM1 = 30;
  59   1        cntPWM2 = 15;
  60   1      }
  61          
  62          void TurnRight2()      //右转
  63          {
  64   1      //  IN1 = 0;  //右轮反转
  65   1      //  IN2 = 1;
  66   1      
  67   1        IN3 = 1;  //左轮正转
  68   1        IN4 = 0;
  69   1        cntPWM1 = 25;
  70   1        cntPWM2 = 15;
  71   1      }
  72          
  73          void TurnLeft1()        //左转
  74          {
  75   1        IN1 = 1;
  76   1        IN2 = 0;    //右轮正转
  77   1      
  78   1      //  IN3 = 0;
  79   1      //  IN4 = 1;    //左轮反转
  80   1        cntPWM1 = 15;
  81   1        cntPWM2 = 30;
  82   1      }         
  83          
  84          void TurnLeft2()        //左转
  85          {
  86   1        IN1 = 1;
  87   1        IN2 = 0;    //右轮正转
  88   1      
  89   1      //  IN3 = 0;
  90   1      //  IN4 = 1;    //左轮反转
  91   1        cntPWM1 = 15;
  92   1        cntPWM2 = 25;
  93   1      } 
  94            
  95          void Forward()         //前进
  96          {
  97   1        IN1 = 1;
  98   1        IN2 = 0;    //右轮正转
  99   1      
 100   1        IN3 = 1;    //左轮正转
 101   1        IN4 = 0;
 102   1        
 103   1        cntPWM1 = 20;
 104   1        cntPWM2 = 20;
 105   1      }
 106          
 107          void Backward()          //后退
 108          {
 109   1        IN1 = 0;  //右轮反转
 110   1        IN2 = 1;
 111   1      
 112   1        IN3 = 0;
 113   1        IN4 = 1;  //左轮反转
 114   1        cntPWM1 = 20;
 115   1        cntPWM2 = 20;
 116   1      }
C51 COMPILER V9.01   DRIVE                                                                 11/06/2021 20:38:09 PAGE 3   

 117          
 118          void Stop()           //停止
 119          {
 120   1        IN1 = 0;
 121   1        IN2 = 0;
 122   1      
 123   1        IN3 = 0;
 124   1        IN4 = 0;
 125   1      }
 126          void XunJi()
 127          
 128          {
 129   1        unsigned char flag = 0;
 130   1      
 131   1        if((left1 == 0)&&(left2 == 0)&&(right1 == 0)&&(right2 == 0))   //0 0 0 0
 132   1          flag = 0;
 133   1      
 134   1        if((left1 == 0)&&(left2 == 0)&&(right1 == 0)&&(right2 == 1))   //0 0 0 1
 135   1          flag = 1;
 136   1      
 137   1        if((left1 == 0)&&(left2 == 0)&&(right1 == 1)&&(right2 == 0))   //0 0 1 0
 138   1          flag = 0;
 139   1      
 140   1        if((left1 == 0)&&(left2 == 0)&&(right1 == 1)&&(right2 == 1))   //0 0 1 1
 141   1          flag = 1;
 142   1      
 143   1        if((left1 == 0)&&(left2 == 1)&&(right1 == 0)&&(right2 == 0))   //0 1 0 0
 144   1          flag = 0;
 145   1      
 146   1        if((left1 == 0)&&(left2 == 1)&&(right1 == 0)&&(right2 == 1))   //0 1 0 1
 147   1          flag = 4;
 148   1      
 149   1        if((left1 == 0)&&(left2 == 1)&&(right1 == 1)&&(right2 == 0))   //0 1 1 0
 150   1          flag = 0;
 151   1        
 152   1        if((left1 == 0)&&(left2 == 1)&&(right1 == 1)&&(right2 == 1))    //0 1 1 1
 153   1          flag = 1;
 154   1        
 155   1        if((left1 == 1)&&(left2 == 0)&&(right1 == 0)&&(right2 == 0))   //1 0 0 0
 156   1          flag = 3;
 157   1        
 158   1        if((left1 == 1)&&(left2 == 0)&&(right1 == 0)&&(right2 == 1))   //1 0 0 1
 159   1          flag = 0;
 160   1        
 161   1        if((left1 == 1)&&(left2 == 0)&&(right1 == 1)&&(right2 == 0))   //1 0 1 0
 162   1          flag = 2;
 163   1        
 164   1        if((left1 == 1)&&(left2 == 0)&&(right1 == 1)&&(right2 == 1))   //1 0 1 1
 165   1          flag = 0;
 166   1        
 167   1        if((left1 == 1)&&(left2 == 1)&&(right1 == 0)&&(right2 == 0))   //1 1 0 0
 168   1          flag = 3;
 169   1         
 170   1        if((left1 == 1)&&(left2 == 1)&&(right1 == 0)&&(right2 == 1))   //1 1 0 1
 171   1          flag = 0;
 172   1      
 173   1        if((left1 == 1)&&(left2 == 1)&&(right1 == 1)&&(right2 == 0))   //1 1 1 0
 174   1          flag = 3;
 175   1        
 176   1        if((left1 == 1)&&(left2 == 1)&&(right1 == 1)&&(right2 == 1))   //1 1 1 1
 177   1          flag = 5;
 178   1        
C51 COMPILER V9.01   DRIVE                                                                 11/06/2021 20:38:09 PAGE 4   

 179   1        switch(flag)
 180   1        {
 181   2          case 0:Forward();break;
 182   2          
 183   2          case 1:TurnLeft1();break; 
 184   2          
 185   2          case 2:TurnLeft2();break;
 186   2        
 187   2          case 3:TurnRight1();break;
 188   2          
 189   2          case 4:TurnRight2();break;
 190   2          
 191   2          default:Stop();break;
 192   2        }
 193   1      }
 194          
 195          void InterruptTime0() interrupt 1
 196          {
 197   1        PWMCnt1++;
 198   1        PWMCnt2++;
 199   1        
 200   1        if(PWMCnt1  >= 200)
 201   1        {
 202   2          PWMCnt1 = 0;
 203   2        }
 204   1        if(PWMCnt1 <= cntPWM1)
 205   1        {
 206   2          ENA = 1;
 207   2        }
 208   1        else
 209   1        {
 210   2          ENA = 0;
 211   2        }
 212   1      
 213   1        if(PWMCnt2 >= 200)
 214   1        {
 215   2          PWMCnt2 = 0;
 216   2        }
 217   1        if(PWMCnt2 <= cntPWM2)
 218   1        {
 219   2          ENB = 1;
 220   2        }
 221   1        else
 222   1        {
 223   2          ENB = 0;
 224   2        }
 225   1      
 226   1        TH0 = (65536 - 50)/256;
 227   1        TL0 = (65536 - 50)%256;
 228   1      }
 229          
 230          void InterruptTime1() interrupt 3
 231          {
 232   1        unsigned int i;
 233   1        i++;
 234   1        if(i==1000)
 235   1          if(i==5)
 236   1          {
 237   2            i=0;
 238   2            j++;
 239   2          }
 240   1      }
C51 COMPILER V9.01   DRIVE                                                                 11/06/2021 20:38:09 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    489    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
